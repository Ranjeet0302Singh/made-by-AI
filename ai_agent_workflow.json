{\n  \"workflow_name\": \"AI Agent Chat and File Management Workflow\",\n  \"description\": \"This workflow outlines the core process for an AI agent to interact with users and manage files in a GitHub repository. It covers interpreting user requests, executing file operations, and providing feedback.\",\n  \"phases\": [\n    {\n      \"phase_name\": \"Phase 1: Interaction & Understanding\",\n      \"steps\": [\n        {\n          \"step_id\": \"1.1\",\n          \"action\": \"Receive User Query\",\n          \"description\": \"The agent listens for and captures input from the user, which can be text-based.\"\n        },\n        {\n          \"step_id\": \"1.2\",\n          \"action\": \"Interpret Intent and Entities\",\n          \"description\": \"Utilizes Natural Language Understanding (NLU) to determine the user\'s goal (e.g., create file, review PR, search code) and extract relevant parameters (e.g., file name, repository, content, PR number).\"\n        },\n        {\n          \"step_id\": \"1.3\",\n          \"action\": \"Clarify Information (if needed)\",\n          \"description\": \"If the user\'s request is ambiguous or lacks necessary parameters, the agent asks clarifying questions to gather complete information.\"\n        }\n      ]\n    },\n    {\n      \"phase_name\": \"Phase 2: Action Execution\",\n      \"steps\": [\n        {\n          \"step_id\": \"2.1\",\n          \"action\": \"Select Appropriate Tool\",\n          \"description\": \"Based on the interpreted intent, the agent identifies and selects the most suitable tool from its available capabilities (e.g., `create_or_update_file`, `review_pull_request`).\"\n        },\
        {\n          \"step_id\": \"2.2\",\n          \"action\": \"Prepare Tool Parameters\",\n          \"description\": \"Gathers and formats all required arguments and optional parameters for the selected tool based on the user\'s request and contextual information.\"\n        },\n        {\n          \"step_id\": \"2.3\",\n          \"action\": \"Execute Tool\",\n          \"description\": \"Invokes the chosen tool with the prepared parameters to perform the requested action (e.g., creating the JSON file in the specified repository).\"\n        }\n      ]\n    },\n    {\n      \"phase_name\": \"Phase 3: Feedback & Error Handling\",\n      \"steps\": [\n        {\n          \"step_id\": \"3.1\",\n          \"action\": \"Acknowledge Completion\",\n          \"description\": \"Confirms to the user that the requested action has been successfully completed.\"\n        },\n        {\n          \"step_id\": \"3.2\",\n          \"action\": \"Provide Output/Result\",\n          \"description\": \"Presents any relevant output or results from the executed action (e.g., confirmation of file creation, link to the created resource).\"\n        },\n        {\n          \"step_id\": \"3.3\",\n          \"action\": \"Handle Errors\",\n          \"description\": \"If an error occurs during execution, the agent reports the error, explains the nature of the problem (e.g., authentication failure, invalid parameters), and suggests corrective actions or requests further user input.\"\n        }\n      ]\n    }\n  ],\n  \"example_use_case_for_file_management\": {\n    \"user_request\": \"Create a file named \'my_data.json\' in \'made-by-AI\' with content: {\'key\': \'value\'}\",\n    \"agent_actions\": [\n      \"Interpret intent: \'create file\'\",\n      \"Extract entities: file_name=\'my_data.json\', repo=\'made-by-AI\', content=\'{\\\"key\\\": \\\"value\\\"}\'\",\n      \"Select tool: `create_or_update_file`\",\n      \"Execute `create_or_update_file` with parameters: `repository=\'made-by-AI\'`, `file_path=\'my_data.json\'`, `content=\'{\\\"key\\\": \\\"value\\\"}\'`, `commit_message=\'Add my_data.json based on user request\'`\",\n      \"Report success: \'File my_data.json created successfully.\'\"\n    ]\n  }\n}